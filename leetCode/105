/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] preorder,int[] inorder){
	     Map<Integer,Integer> map = new HashMap<>();
	     for(int i = 0;i<inorder.length;i++){
		    map.put(inorder[i],i);
         }
        return helper(preorder,inorder,map,0,inorder.length-1,0,inorder.length-1);
	    
    }
    
    public TreeNode helper(int[] preorder,int[] inorder,Map<Integer,Integer> map,int pstart,int pend,int istart,int iend){
        if(pstart > pend) return null;
	    TreeNode root = new TreeNode(preorder[pstart]);
	    int index = map.get(preorder[pstart]);
	    int len = index - istart;
	    root.left = helper(preorder,inorder,map,pstart+1,pstart+len,istart,index-1);
	    root.right = helper(preorder,inorder,map,pstart+len+1,pend,index+1,iend);
	    return root;
        
    }

}
