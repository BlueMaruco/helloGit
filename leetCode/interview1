class TreeNode{
    TreeNode left;
    TreeNode right;
    char val;
    TreeNode(char val){
        this.val = val;
        left = null;
        right = null;
    }
    TreeNode(){
        left = null;
        right = null;
    }
}

class BinaryTree{


    TreeNode root;
    char[] array;
    int height;
    int loc;
    public BinaryTree(String str){
        root = new TreeNode();
        array = str.toCharArray();
        loc = 0;
        height = (int)(Math.log(str.length())/Math.log(2));
        buildTree(root,0);

    }
    public int buildTree(TreeNode root,int level){
        int l_children;
        int r_children;
        if(level== height-1){
            char l_val = array[loc++];
            char r_val = array[loc++];
            if(l_val==r_val) return l_val;
            TreeNode left = new TreeNode(l_val);
            TreeNode right = new TreeNode(r_val);
            root.left = left;
            root.right = right;
            return -1;
        }else{
            TreeNode left = new TreeNode();
            TreeNode right = new TreeNode();
            root.left = left;
            root.right = right;
            l_children = buildTree(root.left,level+1);
            r_children = buildTree(root.right,level+1);
            if(l_children == r_children){
                if(l_children!=-1){
                    root.left = null;
                    root.right = null;
                }
                return l_children;
            }else{
                if(l_children!=-1){
                    left.val = (char)l_children;
                }

              if(r_children!=-1){
                    right.val =(char) r_children;

                }

                return -1;
            }

        }
    }
}
