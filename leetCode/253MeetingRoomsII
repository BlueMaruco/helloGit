/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public int minMeetingRooms(Interval[] intervals){
    	if(intervals==null) return 0;
    	Arrays.sort(intervals,new Comparator<Interval>(){
    		public int compare(Interval a,Interval b){
    		    return a.start-b.start;
            }
        });
       // PriorityQueue<Integer> ends = new PriorityQueue<>();
       List<Interval> newintervals = new ArrayList<>();
	    for(int i = 0;i<intervals.length;i++){
		    boolean flag = false;
		    for(Interval interval:newintervals){
			    if(interval.end<=intervals[i].start){
		            interval.end = intervals[i].end;
		            flag = true;
		            break;
                }
            }
            if(!flag){
            	Interval newinterval = new Interval(intervals[i].start,intervals[i].end);
                newintervals.add(newinterval);
            }
		
        }
        return newintervals.size();
    }

}
