public class Solution {
   public int minCost(int[][] costs){
	    if(costs==null||costs.length==0) return 0;
	    int[][] sum = new int[costs.length+1][3];
	    int min = Integer.MAX_VALUE;
        for(int i = 0;i<costs.length;i++){
	        Arrays.fill(sum[i],Integer.MAX_VALUE);
        }
        for(int i = 0;i<3;i++){
	        min = Math.min(min,generateMinCost(costs,sum,0,i));
        }
	    return min;
    }
    public int generateMinCost(int[][] costs,int[][] sum,int index,int pre){
	    if(index>costs.length-1){ return 0;}
	    if(sum[index][pre]!=Integer.MAX_VALUE) return sum[index][pre];
	    int min = Integer.MAX_VALUE;
        for(int i = 0;i<3;i++){
	        if(i==pre) continue;
            min = Math.min(min,generateMinCost(costs,sum,index+1,i));
        }
        sum[index][pre] = min+costs[index][pre];
        return sum[index][pre];
    }



}
