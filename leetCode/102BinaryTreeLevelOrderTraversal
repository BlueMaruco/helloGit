/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root){
    
    	List<List<Integer>> traversal = new ArrayList<>();
    	if(root == null) return traversal;
    	Queue<TreeNode> nodes = new LinkedList<>();
    	nodes.add(root);
    	traverse(traversal,nodes);
    	return traversal;

    }
    public void traverse(List<List<Integer>> traversal,Queue<TreeNode> nodes){
	    List<Integer> level_value = new ArrayList<>();
	    int node_size = nodes.size();
	    for(int i = 0;i<node_size;i++){
		    TreeNode tmp = nodes.poll();
		    level_value.add(tmp.val);
            if(tmp.left!=null)
                nodes.add(tmp.left);
            if(tmp.right!=null)
                nodes.add(tmp.right);
	
        }
        traversal.add(level_value);
        if(!nodes.isEmpty()){
	        traverse(traversal,nodes);
        }

    }

}
