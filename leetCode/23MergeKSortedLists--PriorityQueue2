public class Solution{
	public ListNode mergeKLists(ListNode[] lists){
	int len = lists.length;
	if(len==0)
	return null;
	if(len==1)
		return lists[0];
	ListNode result = new ListNode(-1);
	ListNode p= result;
	PriorityQueue<Integer> q = new PriorityQueue<Integer>();
	while(notFinished(lists)){
	for(int i=0;i<len;i++){
	if(lists[i]!=null){
	q.add(lists[i].val);
lists[i] = lists[i].next;
}
}
}
while(!q.isEmpty()){
p.next = new ListNode(q.poll());
p =p.next;
}
return result.next;
}

 boolean notFinished(ListNode[] lists){
int len = lists.length;
for(int i=0;i<len;i++){
if(list[i]!=null)
return true;
}
return false;
}
}
