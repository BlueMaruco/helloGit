public class Solution {
   String str;
public String longestPalindrome(String str){
	this.str = str;
int n = 2*str.length()-1;
	int index=0;
	int longest=0;
//	Map<Integer,Integer> map = new HashMap<>();
	for(int i = 0;i<n;i++){
		int len = lengthPalindrome(i);
//map.put(i,len);
if(len>longest){
	index = i;
	longest = len;
}
}
    if(longest%2==1)
        return str.substring(index/2-longest/2,index/2+longest/2+1);
    else{
        return str.substring((index+1)/2-longest/2,(index+1)/2+longest/2);}
}
    public int lengthPalindrome(int i){
	    int left;
	    int right;
        if(i%2==0){
        	i = i/2;
        	left = i-1;
        	right = i+1;
        }else{
        	left = (i-1)/2;
        	right =(i+1)/2;
        }

        while(left>=0&&right<str.length()){
        		if(str.charAt(left)!=str.charAt(right))
        			break;
        		left--;
        		right++;
        }
        return right-left-1;

    }


}
