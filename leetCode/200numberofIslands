public class Solution {
    public int numIslands(char[][] grid ){

        int len1= grid.length;
        int count = 0;
        if(len1==0){
            return 0;
        }
        int len2= grid[0].length;
        boolean[][] flag=new boolean[len1][len2];
        for(int i =0;i<len1;i++){
            for(int j=0;j<len2;j++){
                if(bfs(grid,count,flag,i,j))
                count++;
            }

        }

        return count;
    }

    public boolean bfs(char[][]grid, int count,boolean[][] flag,int i, int j){
       // System.out.println(i+" "+j);
       // System.out.println(j);
        if(grid[i][j]=='1'&&flag[i][j]==false){
            flag[i][j]=true;
            if(i-1>=0){
                bfs(grid,count,flag,i-1,j);
            }
            if(j-1>=0){
                bfs(grid,count,flag,i,j-1);
            }
            if(i+1<grid.length){
                bfs(grid,count,flag,i+1,j);
            }
            if(j+1<grid[0].length){
                bfs(grid,count,flag,i,j+1);
            }
            return true;
        }
        return false;



    }
}
