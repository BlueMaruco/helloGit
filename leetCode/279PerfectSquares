public class Solution {
   public int numSquares(int input){

            int bound = (int) Math.sqrt(input);

            if(input==bound*bound){
                return 1;
            }
            else if(bound == 1){
                return input;
            }
            else{
                int range = bound-bound/2;
                ArrayList<LinkedList<Integer>> lists = new ArrayList<LinkedList<Integer>>();
                ArrayList<boolean[]> flag = new ArrayList<boolean[]>();
                for(int j =range;j<=bound;j++){
                    lists.add(new LinkedList<Integer>());
                    lists.get(j-range).add(j * j);
                    flag.add(new boolean[input]);
                }
                int count = 1;
                    while(true) {
                        for (int j = 0; j < lists.size(); j++) {
                            int size = lists.get(j).size();
                           for(int k = 0;k<size;k++){
                                for (int i = 1; i <= bound; i++) {

                                int tmp = lists.get(j).getFirst() + i * i;
                                if (tmp == input) {
                                    return ++count;
                                } else if (tmp > input) {
                                    lists.get(j).removeFirst();
                                    break;
                                } else {

                                      if(!flag.get(j)[tmp]){
                                    lists.get(j).add(tmp);
                                    flag.get(j)[tmp] =true;
                                      }
                                }
                                }
                            }



                        }
                        count++;


                    }

            }


        }

}
