/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 public class Solution{
   List<String> finalList;

    public Solution(){
        finalList = new ArrayList<String>();
    }
    public List<String> binaryTreePaths(TreeNode root){
        if(root == null){
            return finalList;
        }
        String tmpStr= Integer.toString( root.val);
        if(root.right==null&&root.left==null){
            finalList.add(tmpStr);
            return finalList;
        }

        if (root.left!=null){
            subBinaryTreePaths(root.left,tmpStr);
        }

        if(root.right!=null){
            subBinaryTreePaths(root.right,tmpStr);

        }
        return finalList;
    }
    public void subBinaryTreePaths(TreeNode root, String tmpStr){
        tmpStr=tmpStr+"->"+ Integer.toString(root.val);
        if(root.right==null&&root.left==null){

            finalList.add(tmpStr);
            return;
        }
        if(root.left!=null){
            subBinaryTreePaths(root.left,tmpStr);
        }
        if(root.right!=null){
            subBinaryTreePaths(root.right,tmpStr);
        }

    }
 }
