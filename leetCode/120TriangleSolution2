public class Solution{
    private int[][] miniSum;
    private List<List<Integer>> triangle;
    private int n;

    public int minimumTotal(List<List<Integer>> triangle){
        if(triangle == null || triangle.size()==0){
            return 0;
        }
        this.n = triangle.size();
        this.miniSum = new int[n+1][n+1];
        this.triangle= triangle;
        for(int i = 0;i<n;i++){
            Arrays.fill(miniSum[i],Integer.MAX_VALUE);

        }
        return dfs(0,0);

    }

    public int dfs(int x,int y){
        if(x>=n){
            return 0;
        }
        if(miniSum[x][y]!=Integer.MAX_VALUE){
            return miniSum[x][y];
        }
        else{
            miniSum[x][y] = Math.min(dfs(x+1,y),dfs(x+1,y+1))+triangle.get(x).get(y);
            return miniSum[x][y];
        }

    }

}
