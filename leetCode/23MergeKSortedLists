public class Solution{
	public ListNode mergeKLists(ListNode[] lists){
		int len = lists.length;
		if (len==0)
			return null;
		return partition(0,len-1,lists);
	
    }
    public ListNode partition(int x,int y,ListNode[] lists){
     if(x==y)return lists[x];
    else if(x<y){
    int q = (x+y)/2;
    ListNode l1=partition(x,q,lists);
    ListNode l2= partition(q+1,y,lists);
    return mergeTwoLists(l1,l2);
    }
    else
    return null;
    
    }

public static ListNode mergeTwoLists(ListNode l1,ListNode l2){
	 ListNode head = new ListNode(-1);
    ListNode p = head;
    while(l1 != null ||l2 != null){
        if(l1 == null)  {   p.next = l2; break; }
        else if(l2 == null) {   p.next = l1; break; }
        else if(l1.val > l2.val)    {   p.next = l2; p = p.next; l2 = l2.next;   }
        else    {   p.next = l1; p = p.next; l1 = l1.next;   }
    }
    return head.next;

}
}
