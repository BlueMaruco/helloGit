public class Solution {
    List<String> results;
    int len = 0;
    String median = "";
    public List<String> generatePalindromes(String str){
    	  results = new ArrayList<>();
          len = str.length();
          int[] count = new int[256];
          for(int i = 0;i<str.length();i++){
                count[str.charAt(i)]++;
          }
    	   int num = 0;
    	   for(int i = 0; i<256;i++){
    	    if(count[i]%2==1) {num++;median = median + (char)i;}
    	    if(num>1) return results;
    	        count[i] = count[i]/2;
            }
    	    dfs(count,"");
    	    return results;
    }

    public void dfs(int[] count,String str){
    	if(str.length()== len/2){
    		StringBuilder tmp = new StringBuilder(str);
    		tmp.reverse();
    		results.add(tmp.append(median).append(str).toString());
        }else{
        	for(int i = 0;i<256;i++){
        		if(count[i]>0){
        		    count[i]--;
                dfs(count,str+(char)i);
                count[i]++;
            }
                
          }
        }
    }

}
