/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] inorder,int[] postorder){
	    Map<Integer,Integer> map = new HashMap<>();
	    for(int i = 0;i<inorder.length;i++){
		    map.put(inorder[i],i);
        }
	    return helper(inorder,postorder,map,0,inorder.length-1,0,inorder.length-1);

	}

    public TreeNode helper(int[] inorder,int[] postorder,Map<Integer,Integer> map, int istart,int iend,int pstart,int pend){
    	if(istart>iend) return null;
    	TreeNode root = new TreeNode(postorder[pend]);
    	int index = map.get(root.val);
    	int len = index - istart;
    	root.left = helper(inorder,postorder,map,istart,index-1,pstart,pstart+len-1);
    	root.right = helper(inorder,postorder,map,index+1,iend,pstart+len,pend-1);
        return root;
    }
}
