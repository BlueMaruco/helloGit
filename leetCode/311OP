public class Solution {
   class Node{
	    int x;
	    int y;
	    Node(int x, int y){
		    this.x = x;
		    this.y = y;
        }
    }

    public int[][] multiply(int[][] A,int[][] B){
        if(A==null||B==null||A.length == 0||B.length==0) return null;
        int[][] results = new int[A.length][B[0].length];
        Map<Integer,List<Node>> mapA = new HashMap<>();
        Map<Integer,List<Node>> mapB = new HashMap<>();
    
        for(int j = 0;j<A[0].length;j++){
            List<Node> listA = new ArrayList<>();
            for(int i = 0;i<A.length;i++){
    		    if(A[i][j]!=0) listA.add(new Node(i,j));	
            }
            mapA.put(j,listA);
        }
        for(int i = 0;i<B.length;i++){
    	    List<Node> listB = new ArrayList<>();
    	    for(int j = 0;j<B[0].length;j++){
    		    if(B[i][j]!=0) listB.add(new Node(i,j));	
        }
            mapB.put(i,listB);
        }
        Set<Integer> keySet = mapA.keySet();
        Iterator itA = keySet.iterator();
        Iterator itB = mapB.keySet().iterator();
        while(itA.hasNext()&&itB.hasNext()){
            List<Node> listA = mapA.get(itA.next());
            List<Node> listB = mapB.get(itB.next());	
            if(listA.size()==0||listB.size()==0) continue;
    	    else{
    		    for(Node a:listA){
    			    for(Node b:listB){
    	                results[a.x][b.y]+=A[a.x][a.y]*B[b.x][b.y];
                    }
                }
            }
        }
    
        return results;	
    
    }

    
}
