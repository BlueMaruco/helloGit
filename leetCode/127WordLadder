public class Solution {
    public int ladderLength(String beginWord,String endWord,Set<String> wordList){
    	Queue<String> queue = new LinkedList<>();
    	Set<String> visited = new HashSet<>();
    	queue.add(beginWord);
    	visited.add(beginWord);
    	queue.add(null);
    	int level = 2;
    	while(!queue.isEmpty()){
    	    String word = queue.poll();
    		if (word!=null){
    			for(int i = 0;i<word.length();i++){
    			    char[] word_array = word.toCharArray();
    			    for(char ch = 'a';ch<='z';ch++){
    			        word_array[i] = ch;
    			        String word_tmp = new String(word_array);	
    			        if(word_tmp.equals(endWord)) return level;
    			        if(wordList.contains(word_tmp)&&!visited.contains(word_tmp)){ 
                            queue.add(word_tmp);
                            visited.add(word_tmp);
                        }
    			    }
    			    
    			}
            }
            else{
                level++;
    		    if(!queue.isEmpty()){
    		        queue.add(null);
    		    }
            }
    		
    		
        }
    
        return 0;

    }
}
